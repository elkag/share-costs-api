spring:
  datasource:
    url: "jdbc:mysql://${MYSQL_HOST:localhost}:${MYSQL_PORT:3306}/sharecosts?serverTimezone=UTC&characterEncoding=UTF-8&sslMode=DISABLED&createDatabaseIfNotExist=true"
    username: "${DB_USER:root}"
    password: "${DB_PASSWORD:root}"
    continueOnError: true
    driver-class-name: "com.mysql.cj.jdbc.Driver"
    hikari:
      connection-test-query: SELECT 1
  jpa:
    show-sql: true
    generate-ddl: true
    hibernate:
      ddl-auto: validate
    open-in-view: false
  security:
    oauth2:
      client:
        registration:
          facebook:
            client-id: 3310247495689135
            client-secret: 38b29ca6b5416aed3fd4433526b4392c
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - public_profile
      provider:
        facebook:
          authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
          tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
          userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)
app:
  auth:
    tokenSecret: ${TOKEN_SECRET:926D96C90030DD58429D2751AC1BDBBC}
    tokenExpirationMsec: ${TOKEN_EXPIRATION_TIME:864000000}
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:3000/oauth2/redirect
      - myandroidapp://oauth2/redirect
      - myiosapp://oauth2/redirect
server:
  error:
    include-message: always